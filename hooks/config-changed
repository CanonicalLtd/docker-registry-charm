#!/usr/bin/env python3

import yaml

from charmhelpers.core import (
    hookenv,
    host,
)


CONFIG_FILE = '/etc/docker/registry/config.yml'
ROOT_CERTIFICATES_FILE = '/etc/docker/registry/token.pem'


def config_changed():
    charm_config = hookenv.config()
    # The config file is created by the deb so will always exist.
    with open(CONFIG_FILE) as f:
        registry_config = yaml.safe_load(f)

    auth = {}
    if charm_config.get("auth-token-realm"):
        # https://docs.docker.com/registry/configuration/#token
        auth["token"] = {
            "realm": charm_config.get("auth-token-realm", ""),
            "service": charm_config.get("auth-token-service", ""),
            "issuer": charm_config.get("auth-token-issuer", ""),
            "rootcertbundle": ROOT_CERTIFICATES_FILE,
        }
        host.write_file(
            ROOT_CERTIFICATES_FILE,
            charm_config.get("auth-token-root-certs", ""),
            perms=0o644,
        )

    if auth:
        registry_config["auth"] = auth
    elif 'auth' in registry_config:
        del registry_config["auth"]

    if charm_config.get("http-host"):
        # Note the "http" section will always be present from the deb
        # package configuration.
        registry_config["http"]["host"] = charm_config["http-host"]

    http_secret = hookenv.leader_get("http-secret")
    if http_secret:
        registry_config["http"]["secret"] = http_secret

    registry_config["log"] = {
        "level": charm_config["log-level"],
        "formatter": "json",
        "fields": {
            "service": "registry",
        },
    }

    storage = {}
    if charm_config.get("storage-swift-authurl"):
        # https://docs.docker.com/registry/configuration/#storage
        storage["swift"] = {
            "authurl": charm_config.get("storage-swift-authurl", ""),
            "username": charm_config.get("storage-swift-username", ""),
            "password": charm_config.get("storage-swift-password", ""),
            "region": charm_config.get("storage-swift-region", ""),
            "container": charm_config.get("storage-swift-container", ""),
            "tenant": charm_config.get("storage-swift-tenant", ""),
        }
        storage["redirect"] = {"disable": True}

    if storage:
        registry_config["storage"] = storage

    host.write_file(
        CONFIG_FILE,
        yaml.safe_dump(registry_config),
        perms=0o644,
    )

    host.service_restart('docker-registry')
    hookenv.open_port(5000)


if __name__ == '__main__':
    config_changed()
